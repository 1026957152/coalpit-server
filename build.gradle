buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.4'

    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
//apply plugin: 'war'
apply plugin: 'org.hidetake.ssh'

jar {
    baseName = 'station-web'
    version =  '0.0.1-SNAPSHOT'
    encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  //  compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")


    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
   // providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")




    compile("org.springframework.boot:spring-boot-starter-freemarker")

/*

    compile("org.springframework.boot:spring-boot-starter-jetty"){
        exclude module: "servlet-api"

    }
*/



/*

    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
        exclude module: "commons-logging"
        exclude module: "jackson-databind"
        exclude module: "servlet-api"
        exclude module: "tomcat-embed-websocket"
    }
*/

    compile('com.alibaba:fastjson:1.2.8')
    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
        exclude module: "tomcat-juli"
    }


    compile('com.cloudhopper.proxool:proxool:0.9.1') {
        exclude module: "servlet-api"
        exclude module: "log4j"
        exclude module: "commons-logging"

        exclude module: "servletapi"
    }

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-activemq', version: '1.5.4.RELEASE'
    compile("org.apache.activemq:activemq-broker")

    compile("org.apache.commons:commons-lang3:3.3.2")
    compile('org.apache.httpcomponents:httpclient:4.3.6')
    compile("mysql:mysql-connector-java:5.1.34")


    compile("io.projectreactor:reactor-bus:2.0.8.RELEASE")


    compile('org.springframework.boot:spring-boot-starter-hateoas') {
        exclude module: "spring-boot-starter-tomcat"
    }


    //以下的两个要配合使用 啊，
    compile('org.springframework.security:spring-security-taglibs:4.0.1.RELEASE')

/*   compile('org.springframework.security:spring-security-web:4.1.0.RELEASE'){
        exclude module: "servlet-api"

    }*/
    compile('javax.servlet.jsp:jsp-api:2.1')

    compile ('org.springframework.cloud:spring-cloud-starter-eureka-server:1.3.4.RELEASE')


    compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'
    compile files('lib/jna-3.0.9.jar')

}

//bootRepackage.enabled = false
test.enabled = false
bootRepackage {
    mainClass = 'com.Application'
}





ssh.settings {
    knownHosts = allowAnyHosts
}


remotes {
    web01 {
        //role('root')
        host = 'yulinmei.cn'
        //port = ''
        user = 'root'
        password ='521silence'
        //identity = file('config/identity.key')
    }
    webServer {
        host = '192.168.30.38'
        user = 'yuan'
        password ='yuan'
        //identity = file('id_rsa')
    }
    coreServer {
        host = '192.168.30.61'
        user = 'yuan'
        password ='yuan'
        //identity = file('id_rsa')
    }
}


task checkWebServer(type: SshTask) {
    session(remotes.web01) {
        def pids = execute('pidof java').trim().split(/ /)
        assert pids.length > 1
    }
}



task deploy {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                put from: './build/libs/station-web-0.0.1-SNAPSHOT.jar', into: '/D://ok/'
                //  execute 'sudo service tomcat restart'
            }

/*           session(remotes.coreServer) {
               put from: './build/libs/core_service-0.0.1-SNAPSHOT.jar', into: '/D://ok/'
               //  execute 'sudo service tomcat restart'
           }*/
        }

    }



}

task deploy_61 {
    doLast {

        ssh.run {


            session(remotes.coreServer) {
                put from: './build/libs/station-web-0.0.1-SNAPSHOT.jar', into: '/D://ok/'
                //  execute 'sudo service tomcat restart'
            }
        }
    }
}

/*
war {
    baseName = 'station-web'
    version =  '0.1.0'
        encoding = 'UTF-8'
}
*/


task deploy_war {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                put from: './build/libs/station-web-0.1.0.war', into: '/D://ok/jetty/'
                //  execute 'sudo service tomcat restart'
            }

/*           session(remotes.coreServer) {
               put from: './build/libs/core_service-0.0.1-SNAPSHOT.jar', into: '/D://ok/'
               //  execute 'sudo service tomcat restart'
           }*/
        }

    }
}

bootRepackage {
    mainClass = 'com.Application'
}